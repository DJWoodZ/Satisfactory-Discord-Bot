# syntax=docker/dockerfile:1

ARG NODE_VERSION=20

FROM node:${NODE_VERSION}-alpine

ENV NODE_ENV production

ARG SATISFACTORY_BOT_DB_PATH
ARG SATISFACTORY_BOT_DISABLE_UNREACHABLE_FOUND_MESSAGES
ARG SATISFACTORY_BOT_DISCORD_CHANNEL_NAME
ARG SATISFACTORY_BOT_DISCORD_SERVER_NAME
ARG SATISFACTORY_BOT_DISCORD_TOKEN
ARG SATISFACTORY_BOT_IGNORE_POLL_STATE_WHEN_MESSAGING
ARG SATISFACTORY_BOT_LOG_LOCATION
ARG SATISFACTORY_BOT_LOG_USE_WATCH_FILE
ARG SATISFACTORY_BOT_POLL_INTERVAL_MINUTES
ARG SATISFACTORY_BOT_PURGE_DISCORD_CHANNEL_AFTER_DAYS
ARG SATISFACTORY_BOT_PURGE_DISCORD_CHANNEL_AFTER_LINES
ARG SATISFACTORY_BOT_PURGE_DISCORD_CHANNEL_HOUR
ARG SATISFACTORY_BOT_PURGE_DISCORD_CHANNEL_NAME
ARG SATISFACTORY_BOT_PURGE_DISCORD_CHANNEL_ON_STARTUP
ARG SATISFACTORY_BOT_PURGE_DISCORD_CHANNEL_SERVER_NAME
ARG SATISFACTORY_BOT_SERVER_IP
ARG SATISFACTORY_BOT_SERVER_MAX_PLAYERS
ARG SATISFACTORY_BOT_SERVER_QUERY_PORT
ARG SATISFACTORY_BOT_SERVER_QUERY_TIMEOUT_MS

WORKDIR /usr/src/app

RUN --mount=type=bind,source=package.json,target=package.json \
    --mount=type=bind,source=package-lock.json,target=package-lock.json \
    --mount=type=cache,target=/root/.npm \
    npm ci --omit=dev

USER node

COPY . .

CMD [ "node", "./bin/server.js" ]
